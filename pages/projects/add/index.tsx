import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from 'styles/Projects.module.css'
import { SyntheticEvent, useState } from 'react'
import { encode } from 'punycode'

const inter = Inter({ subsets: ['latin'] })

export default function AddProject() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [sourceURL, setSourceURL] = useState("");
  const [file, setFile] = useState<File|null>();

  const handleSubmit = (e:SyntheticEvent) => {
    e.preventDefault();

    const getBase64 = (file:File|null|undefined) => {
      return new Promise<string|ArrayBuffer|null>((resolve, reject) => {
        const reader = new FileReader();
        if (file) {
          console.log('sdafasdfhasjkdhfkasd')
          reader.readAsDataURL(file);
        }
        console.log(file)
        reader.onload = () => {
          console.log(reader.result)
          resolve(reader.result)
        };
        reader.onerror = error => reject(error);
      });
    }

    
    getBase64(file)
    .then((encodedFile) => {
        const formData = new FormData()

        formData.append('file', encodedFile as string)
        formData.append('fileName', file ? file.name : "");
        formData.append('title', title);
        formData.append('description', description);
        formData.append('sourceURL', sourceURL);

        fetch('/api/projects', {
          method: 'POST',
          body: JSON.stringify({
            title,
            description,
            sourceURL,
            file: encodedFile,
            fileName: file?.name
          })
        })
      })
      .catch(error => console.log(error));
  }

  return (
    <>
      <Head>
        <title>Projects</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.wrapper}>
        <h1>Add Project</h1>
        <form onSubmit={handleSubmit}>
          <label>Title</label>
          <input 
            value={title} 
            onChange={e => setTitle(e.target.value)}
          />
          <label>Description</label>
          <input 
            value={description} 
            onChange={e => setDescription(e.target.value)}
          />
          <label>Source URL</label>
          <input></input>
          <label>File</label>
          <input 
            type="file" 
            onChange={e => setFile(e.target.files?.item(0))}
          >
          </input>
          <input type="submit"></input>
        </form>
      </div>
    </>
  );
}
