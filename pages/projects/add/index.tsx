import Head from 'next/head'
import { Inter } from '@next/font/google'
import styles from 'styles/AddProjects.module.css'
import { SyntheticEvent, useState } from 'react'
import { SanitizedHTML } from 'components/SanitizedHTML'
import { ProjectCard } from 'components/ProjectCard'
import { addProject } from 'lib/addProject'
import { uploadFile } from 'lib/uploadFile'

const inter = Inter({ subsets: ['latin'] })

export default function AddProject() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [sourceURL, setSourceURL] = useState("");
  const [thumbnail, setThumbnail] = useState<File|null>();
  const [htmlInput, setHtmlInput] = useState("");

  const handleSubmit = async(e:SyntheticEvent) => {
    e.preventDefault();
    let progress = 0;
    
    if (thumbnail)
      await uploadFile(thumbnail, '/public/images', thumbnail?.name, { progress: progress });
    await addProject({ title, description, sourceURL, htmlInput })
  }

  return (
    <>
      <Head>
        <title>Projects</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.wrapper}>
        <h1>Add Project</h1>
        <form className={styles.projectForm} onSubmit={handleSubmit}>
          <fieldset className={styles.projectField}>
            <label htmlFor="title">Title</label>
            <input
              type="text"
              name="title" 
              value={title} 
              onChange={e => setTitle(e.target.value)}
            />
          </fieldset>
          <fieldset className={styles.projectField}>
            <label htmlFor="description">Description</label>
            <input
              type="text"
              name="description"
              value={description}
              onChange={e => setDescription(e.target.value)}
            />
          </fieldset>
          <fieldset className={styles.projectField}>
            <label htmlFor="sourceURL">Source URL</label>
            <input 
              type="text"
              name="sourceURL"
              onChange={e => setSourceURL(e.target.value)}
              value={sourceURL}
            />
          </fieldset>
          <fieldset className={styles.projectField}>
            <label htmlFor="thumbnail">Thumbnail</label>
            <input
              name="thumbnail"
              type="file" 
              onChange={e => setThumbnail(e.target.files?.item(0))}
            />
          </fieldset>
          <fieldset className={styles.projectField}>
            <label htmlFor="htmlInput">HTML Input</label>
            <textarea
              name="htmlInput"
              onChange={e => setHtmlInput(e.target.value)}
              value={htmlInput}
            />
          </fieldset>
          <input type="submit"></input>
        </form>
        <ProjectCard
          title={title}
          description={description}
          thumbnail={thumbnail}
          sourceURL={sourceURL}
        />
        <SanitizedHTML className={styles.wrapper} html={htmlInput}/>
      </div>
    </>
  );
}
